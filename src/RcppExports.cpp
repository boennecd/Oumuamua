// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// omua_to_R
void omua_to_R(const arma::mat& X, const arma::vec& Y, const arma::vec& W, const double lambda, const unsigned endspan, const unsigned minspan, const unsigned degree, const unsigned nk, const double penalty, const unsigned trace, const double thresh);
RcppExport SEXP _Oumuamua_omua_to_R(SEXP XSEXP, SEXP YSEXP, SEXP WSEXP, SEXP lambdaSEXP, SEXP endspanSEXP, SEXP minspanSEXP, SEXP degreeSEXP, SEXP nkSEXP, SEXP penaltySEXP, SEXP traceSEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type endspan(endspanSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type minspan(minspanSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type degree(degreeSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type nk(nkSEXP);
    Rcpp::traits::input_parameter< const double >::type penalty(penaltySEXP);
    Rcpp::traits::input_parameter< const unsigned >::type trace(traceSEXP);
    Rcpp::traits::input_parameter< const double >::type thresh(threshSEXP);
    omua_to_R(X, Y, W, lambda, endspan, minspan, degree, nk, penalty, trace, thresh);
    return R_NilValue;
END_RCPP
}

RcppExport SEXP run_testthat_tests();

static const R_CallMethodDef CallEntries[] = {
    {"_Oumuamua_omua_to_R", (DL_FUNC) &_Oumuamua_omua_to_R, 11},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_Oumuamua(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
